const Form = require('../models/Form');
const CallTask = require('../models/CallTask');
const { backKeyboard, mainKeyboard } = require('./mainMenu');
const { Markup } = require('telegraf');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É"
const handleCreateForm = (ctx) => {
  ctx.session.form = {};  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
  ctx.session.step = 'farm_name';  // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ö–æ–∑—è–π—Å—Ç–≤–∞:', backKeyboard);
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã newform
const handleNewFormCommand = (ctx) => {
  ctx.session.form = {};  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
  ctx.session.step = 'farm_name';  // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞
  ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Ö–æ–∑—è–π—Å—Ç–≤–∞:', backKeyboard);
};

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –≤ MongoDB
async function saveForm(ctx) {
  const form = new Form({
    farm_name: ctx.session.form.farm_name,
    phone_number: ctx.session.form.phone_number,
    treatment_date: ctx.session.form.treatment_date,
    chemical_name: ctx.session.form.chemical_name,
    field_size: ctx.session.form.field_size,
    ph_before_photo: ctx.session.form.ph_before_photo,
    ph_after_photo: ctx.session.form.ph_after_photo,
    call_date: ctx.session.form.call_date,
    call_time: ctx.session.form.call_time,
    author_id: ctx.from.id
  });

  try {
    const savedForm = await form.save();

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ –î–î-–ú–ú-–ì–ì–ì–ì –≤ –æ–±—ä–µ–∫—Ç Date
    const [day, month, year] = savedForm.call_date.split('-').map(Number);
    const callDateTime = new Date(year, month - 1, day, 13, 0, 0); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è 13:00

    const callTask = new CallTask({
      form_id: savedForm._id,
      call_at: callDateTime,
      status: 'pending'
    });

    await callTask.save();
    console.log('–ó–∞–¥–∞—á–∞ –∑–≤–æ–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    throw error;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã
const handleFormText = async (ctx) => {
  if (!ctx.session || !ctx.session.step) return;

  const text = ctx.message.text;

  switch (ctx.session.step) {
    case 'farm_name':
      ctx.session.form.farm_name = text;
      ctx.session.step = 'phone_number';
      ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: +77001234567):', backKeyboard);
      break;
    case 'phone_number':
      if (!/^\+?\d{10,15}$/.test(text)) {
        ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +77001234567:', backKeyboard);
        return;
      }
      ctx.session.form.phone_number = text;
      ctx.session.step = 'treatment_date';
      ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î-–ú–ú-–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 20-03-2024):', backKeyboard);
      break;
    case 'treatment_date':
      if (!/^\d{2}-\d{2}-\d{4}$/.test(text)) {
        ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î-–ú–ú-–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 20-03-2024):', backKeyboard);
        return;
      }
      ctx.session.form.treatment_date = text;
      ctx.session.step = 'chemical_name';
      ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞:', backKeyboard);
      break;
    case 'chemical_name':
      ctx.session.form.chemical_name = text;
      ctx.session.step = 'field_size';
      ctx.reply('–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è (–≤ –≥–µ–∫—Ç–∞—Ä–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: 10.5):', backKeyboard);
      break;
    case 'field_size':
      const fieldSize = parseFloat(text);
      if (isNaN(fieldSize) || fieldSize <= 0) {
        ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 10.5):', backKeyboard);
        return;
      }
      ctx.session.form.field_size = fieldSize;
      ctx.session.step = 'ph_before_photo';
      ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é pH –≤–æ–¥—ã –î–û –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞:', backKeyboard);
      break;
    case 'call_date':
      if (!/^\d{2}-\d{2}-\d{4}$/.test(text)) {
        ctx.reply('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î-–ú–ú-–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 20-03-2024):', backKeyboard);
        return;
      }
      ctx.session.form.call_date = text;
      ctx.session.form.call_time = '13:00';
      
      try {
        await saveForm(ctx);
        ctx.reply('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!', mainKeyboard);
      } catch (error) {
        console.error('Error saving form:', error);
        ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', mainKeyboard);
      }
      ctx.session = null;
      break;
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
const handlePhotoUpload = async (ctx) => {
  console.log('–ü–æ–ª—É—á–µ–Ω–æ —Ñ–æ—Ç–æ:', ctx.message.photo);
  console.log('–¢–µ–∫—É—â–∏–π —à–∞–≥:', ctx.session.step);
  
  if (!ctx.session || !ctx.session.step) {
    console.log('–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –∏–ª–∏ —à–∞–≥–∞');
    return;
  }

  try {
    if (ctx.session.step === 'ph_before_photo') {
      console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ pH –¥–æ');
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
      ctx.session.form.ph_before_photo = ctx.message.photo[0].file_id;
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω file_id –¥–ª—è ph_before_photo:', ctx.session.form.ph_before_photo);
      ctx.session.step = 'ph_after_photo';
      ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é pH –≤–æ–¥—ã –ü–û–°–õ–ï –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞:', backKeyboard);
    } else if (ctx.session.step === 'ph_after_photo') {
      console.log('–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ pH –ø–æ—Å–ª–µ');
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
      ctx.session.form.ph_after_photo = ctx.message.photo[0].file_id;
      console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω file_id –¥–ª—è ph_after_photo:', ctx.session.form.ph_after_photo);
      ctx.session.step = 'call_date';
      
      const dateKeyboard = Markup.inlineKeyboard([
        [Markup.button.callback('üìÖ –ß–µ—Ä–µ–∑ 3 –¥–Ω—è', 'set_date_3_days')],
        [Markup.button.callback('üîô –í–µ—Ä–Ω—É—Ç—å—Å—è', 'back_to_main')]
      ]);
      
      ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∑–≤–æ–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î-–ú–ú-–ì–ì–ì–ì (–Ω–∞–ø—Ä–∏–º–µ—Ä, 20-03-2024) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ß–µ—Ä–µ–∑ 3 –¥–Ω—è":', dateKeyboard);
    } else {
      console.log('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —à–∞–≥ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ:', ctx.session.step);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', backKeyboard);
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "—á–µ—Ä–µ–∑ 3 –¥–Ω—è"
const handleSetDate3Days = async (ctx) => {
  if (ctx.session.step !== 'call_date') return;
  
  const today = new Date();
  const threeDaysLater = new Date(today);
  threeDaysLater.setDate(today.getDate() + 3);
  
  const day = String(threeDaysLater.getDate()).padStart(2, '0');
  const month = String(threeDaysLater.getMonth() + 1).padStart(2, '0');
  const year = threeDaysLater.getFullYear();
  
  ctx.session.form.call_date = `${day}-${month}-${year}`;
  ctx.session.form.call_time = '13:00';
  
  try {
    await saveForm(ctx);
    ctx.reply('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!', mainKeyboard);
  } catch (error) {
    console.error('Error saving form:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ä–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', mainKeyboard);
  }
  ctx.session = null;
};

module.exports = {
  handleCreateForm,
  handleNewFormCommand,
  handleFormText,
  handleSetDate3Days,
  handlePhotoUpload
}; 