const CallTask = require('../models/CallTask');
const Form = require('../models/Form');
const { Telegraf } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);

async function processTasks() {
  try {
    const now = new Date();
    const tasks = await CallTask.find({
      call_at: { $lte: now },
      status: 'pending'
    }).populate('form_id');

    for (const task of tasks) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
      task.status = 'done';
      await task.save();

      // –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ä–º—É
      const form = await Form.findById(task.form_id);
      
      if (form) {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É —Ñ–æ—Ä–º—ã
        try {
          await bot.telegram.sendMessage(
            form.author_id,
            `üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –í—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞ –ø–æ —Ñ–æ—Ä–º–µ "${form.farm_name}" –Ω–∞—Å—Ç—É–ø–∏–ª–æ!\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${form.phone_number}`
          );
        } catch (error) {
          console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≤—Ç–æ—Ä—É ${form.author_id}:`, error);
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ê–∑–∞–º–∞—Ç—É
        try {
          await bot.telegram.sendMessage(
            383906528,
            `üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –í—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞ –ø–æ —Ñ–æ—Ä–º–µ "${form.farm_name}" –Ω–∞—Å—Ç—É–ø–∏–ª–æ!\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${form.phone_number}`
          );
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ê–∑–∞–º–∞—Ç—É:', error);
        }

        // –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        await CallTask.findByIdAndDelete(task._id);
      }
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–¥–∞—á:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞–¥–∞—á –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
setInterval(processTasks, 60000);

module.exports = { processTasks }; 